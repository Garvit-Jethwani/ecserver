// Test generated by RoostGPT for test test1 using AI Model gpt

package main

import (
	"net/http"
	"net/http/httptest"
	"strings"
	"testing"
)

// Stub functions for the actual methods used in serveRoot
func getAllCandidates(w http.ResponseWriter, r *http.Request) {}
func addCandidate(w http.ResponseWriter, r *http.Request) {}
func deleteCandidate(w http.ResponseWriter, r *http.Request) {}
func handleInvalidMethod(w http.ResponseWriter, r *http.Request) {}

func TestServeRoot50402a7477(t *testing.T) {
	// Test GET method
	req, err := http.NewRequest("GET", "/", nil)
	if err != nil {
		t.Fatal(err)
	}
	rr := httptest.NewRecorder()
	handler := http.HandlerFunc(serveRoot)
	handler.ServeHTTP(rr, req)
	if status := rr.Code; status != http.StatusOK {
		t.Errorf("handler returned wrong status code: got %v want %v",
			status, http.StatusOK)
	}

	// Test POST method
	req, err = http.NewRequest("POST", "/", strings.NewReader("dummy data"))
	if err != nil {
		t.Fatal(err)
	}
	rr = httptest.NewRecorder()
	handler.ServeHTTP(rr, req)
	if status := rr.Code; status != http.StatusOK {
		t.Errorf("handler returned wrong status code: got %v want %v",
			status, http.StatusOK)
	}

	// Test DELETE method
	req, err = http.NewRequest("DELETE", "/", nil)
	if err != nil {
		t.Fatal(err)
	}
	rr = httptest.NewRecorder()
	handler.ServeHTTP(rr, req)
	if status := rr.Code; status != http.StatusOK {
		t.Errorf("handler returned wrong status code: got %v want %v",
			status, http.StatusOK)
	}

	// Test OPTIONS method
	req, err = http.NewRequest("OPTIONS", "/", nil)
	if err != nil {
		t.Fatal(err)
	}
	rr = httptest.NewRecorder()
	handler.ServeHTTP(rr, req)
	if status := rr.Code; status != http.StatusOK {
		t.Errorf("handler returned wrong status code: got %v want %v",
			status, http.StatusOK)
	}

	// Test invalid method
	req, err = http.NewRequest("PUT", "/", nil)
	if err != nil {
		t.Fatal(err)
	}
	rr = httptest.NewRecorder()
	handler.ServeHTTP(rr, req)
	if status := rr.Code; status != http.StatusOK {
		t.Errorf("handler returned wrong status code: got %v want %v",
			status, http.StatusOK)
	}
}